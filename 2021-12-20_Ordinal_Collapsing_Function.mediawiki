私は巨大数の研究を始めた当時から順序数へ関心を持ち続けていた。それが順序数崩壊関数として結実した。年の瀬なので成果を纏めようと思う。

== 共通定義 ==

\( \mathrm{pCIC} + \mathrm{UA} + \mathrm{AC} \) で作業を行う。

<div style="display: none;"><nowiki>\[
  \newcommand{\paren}[1]{ \mathord{ \left ( { #1 } \right ) } }
  \newcommand{\bracket}[1]{ \mathord{ \left [ { #1 } \right ] } }
  \newcommand{\brace}[1]{ \mathord{ \left \{ { #1 } \right \} } }
  \newcommand{\midder}[1]{ \mathrel{ \left | \rule{0em}{#1} \right . } }
\]</nowiki></div>

=== 冪の型 ===

\( \mathcal{P} \paren{ \_ } \) は冪の型である。 \( \mathcal{P} : { \mathrm{Type} } _ { i } \rightarrow { \mathrm{Type} } _ { i } \) である。

<nowiki>\[
  \mathcal{P} \paren{ A } = A \rightarrow \mathrm{hProp}
\]</nowiki>

=== 集合の型 ===

\( \mathrm{Set} \) は集合の型である。

=== 順序数の型 ===

\( \mathrm{On} \) は順序数の型である。

=== 無限基数の型 ===

\( \mathrm{Card} \) は無限基数の型である。

=== 共終数 ===

\( \mathrm{cf} \paren{ \_ } \) は共終数である。

\( \alpha \in \mathrm{On} \) であるとして、 \( \mathrm{cf} \paren{ \alpha } \in \mathrm{On} \) である。

<nowiki>\[
  \mathrm{cf} \paren{ \alpha } = \min \brace{ \beta \in \mathrm{On} \midder{1ex} \exists \paren{ f \in \paren{ \beta \rightarrow \alpha } } \ldotp \forall \paren{ x \in \alpha } \ldotp \exists \paren{ y \in \beta } \ldotp x \leq f \paren{ y } }
\]</nowiki>

\( \kappa \in \mathrm{Card} \) であるとして、 \( \mathrm{cf} \paren{ \kappa } \in \mathrm{Card} \) である。

<nowiki>\[
  \mathrm{cf} \paren{ \kappa } = \min \brace{ \lambda \in \mathrm{Card} \midder{1ex} \exists \paren{ f \in \paren{ \lambda \rightarrow \kappa } } \ldotp \forall \paren{ x \in \kappa } \ldotp \exists \paren{ y \in \lambda } \ldotp x \leq f \paren{ y } }
\]</nowiki>

=== 最小の非可算基数 ===

\( \Omega \) は最小の非可算基数である。

== 無限基数による単純な順序数崩壊関数 ==

無限基数による単純な順序数崩壊関数 (Simple Ordinal Collapsing Functions with an Infinite Cardinal, SOCFwaIC) は、最小の非可算基数だけを崩壊させる関数である。

\( C \paren{ \_, \_ } \) は \( \mathrm{On} \times \mathrm{On} \rightarrow \mathcal{P} \paren{ \mathrm{On} } \) である。 \( C \paren{ \alpha, \beta } \) は次の条件を満たす最小のものである。

# Base
## \( \xi \in \beta \rightarrow C \paren{ \alpha, \beta } \)
# Addition
## \( 0 \in C \paren{ \alpha, \beta } \)
## \( \xi \in C \paren{ \alpha, \beta } \land \zeta \in C \paren{ \alpha, beta } \rightarrow \paren{ \xi + \zeta } \in C \paren{ \alpha, beta } \)
# Increasing Function
## \( 1 \in C \paren{ \alpha, \beta } \)
# Collapsing Target
## \( \Omega \in C \paren{ \alpha, \beta } \)
# Recursion
## \( \xi \in C \paren{ \alpha, \beta } \land \mu \in C \paren{ \alpha, \beta } \land \xi < \alpha \rightarrow { \psi } _ { \mu } \paren{ \xi } \in C \paren{ \alpha, \beta } \)

\( { \psi } _ { \_ } \paren{ \_ } \) は \( \mathrm{On} \rightarrow \mathrm{On} \rightarrow \mathrm{On} \) である。

<nowiki>\[
  { \psi } _ { \nu } \paren{ \alpha } = \min \brace{ \xi \in \mathrm{On} \midder{1ex} \paren{ C \paren{ \alpha, \zeta } \cap \nu } \subseteq \xi }
\]</nowiki>

=== 解析 ===

\( T \) は次の条件を満たす最小の型である。

# \( 0 : T \)
# \( x : T \land y : T \rightarrow \paren{ x + y } : T \)
# \( 1 : T \)
# \( \Omega : T \)
# \( x : T \land y : T \rightarrow { \psi } _ { x } \paren{ y } : T \)

共終数を計算する。

# \( \mathrm{cf} \paren{ \alpha } = \_ \)
## \( \alpha = 0 \Rightarrow \_ \)
### \( 0 \)
## \( \alpha = 1 \Rightarrow \_ \)
### \( 1 \)
## \( \alpha = { \alpha } _ { 1 } + { \alpha } _ { 2 } \Rightarrow \_ \)
### \( \mathrm{cf} \paren{ { \alpha } _ { 2 } } \)
## \( \alpha = \Omega \Rightarrow \_ \)
### \( \Omega \)
## \( \alpha = { \psi } _ { { \alpha } _ { 1 } } \paren{ { \alpha } _ { 2 } } \Rightarrow \_ \)
### \( { \alpha } _ { 1 } = \Omega \Rightarrow \_ \)
#### \( \omega \)

== 無限基数を数え上げる関数による単純な順序数崩壊関数 ==

無限基数を数え上げる関数による単純な順序数崩壊関数 (Simple Ordinal Collapsing Functions with a Function for Counting Infinite Cardinals, SOCFwaFfCIC) は、

== 無限基数を数え上げる二変数関数による単純な順序数崩壊関数 ==

無限基数を数え上げる二変数関数による単純な順序数崩壊関数 (Simple Ordinal Collapsing Functions with a Bivariate Function for Counting Infinite Cardinals, SOCFwaBFfCIC) は、

== 無限基数を数え上げる多変数関数による単純な順序数崩壊関数 ==

無限基数を数え上げる多変数関数による単純な順序数崩壊関数 (Simple Ordinal Collapsing Functions with a Multivariate Function for Counting Infinite Cardinals, SOCFwaMFfCIC) は、

== 到達不能基数による単純な順序数崩壊関数 ==

到達不能基数による単純な順序数崩壊関数 (Simple Ordinal Collapsing Function with an Inaccessible Cardinal, SOCFwaIC) は、

== 到達不能基数を数え上げる関数による単純な順序数崩壊関数 ==

到達不能基数を数え上げる関数による単純な順序数崩壊関数 (Simple Ordinal Collapsing Function with a Function for Counting Inaccessible Cardinals, SOCFwaFfCIC) は、

== 到達不能基数を数え上げる二変数関数による単純な順序数崩壊関数 ==

到達不能基数を数え上げる二変数関数による単純な順序数崩壊関数 (Simple Ordinal Collapsing Functions with a Bivariate Function for Counting Inaccessible Cardinals, SOCFwaBFfCIC) は、

== 到達不能基数を数え上げる多変数関数による単純な順序数崩壊関数 ==

到達不能基数を数え上げる多変数関数による単純な順序数崩壊関数 (Simple Ordinal Collapsing Functions with a Multivariate Function for Counting Inaccessible Cardinals, SOCFwaMFfCIC) は、

== 弱マーロ基数を数え上げる club クラスによる単純な順序数崩壊関数 ==

弱マーロ基数を数え上げる club クラスによる単純な順序数崩壊関数 (Simple Ordinal Collapsing Functions with a Club Class for Counting Weakly Mahlo Cardinals, SOCFwaCCfCWMC) は、

== 弱マーロ基数を数え上げる club クラスを数え上げる関数による単純な順序数崩壊関数 ==

弱マーロ基数を数え上げる club クラスを数え上げる関数による単純な順序数崩壊関数 (Simple Ordinal Collapsing Functions with a Function for Counting Club Classes for Counting Weakly Mahlo Cardinals, SOCFwaFfCCCfCWMC) は、
