今日は、計算可能関数と型付きラムダ計算の関係について語りましょうか。

== 型付きラムダ計算 ==

計算可能関数については巨大数論に触れている読者なら既にご存知だと思います。ですが、型付きラムダ計算の知識までは求めません。ここで触りだけを解説しておきます。

型付きラムダ計算 (typed lambda calculus) とは、型が付いたラムダ計算 (lambda calculus) のことです。

ラムダ計算 (lambda calculus) とは、普通では型無しラムダ計算 (untyped lambda calculus) のことを指しますが、ラムダ計算に類似するものを全て指す言葉として使われることがあるかもないかもしれません。ラムダ計算は「引数を取る」「一つの値をもう一つの値に適用する」という二つの操作だけで成り立つ計算模型（計算モデル）です。すなわち、チューリング完全です。余りにも原始的かつ基本的すぎて何が出来るかでは説明しづらいので、何と関連するかで説明してみます。

まず、見逃せないのは関数型言語との関連です。関数型言語の基礎にはラムダ計算があり、チューリングマシンやレジスタマシンやスタックマシンが基礎にある命令型言語とは対照的です。関数型言語の計算とは式を評価することであり、評価の順番は様々なものはあります。命令型言語の計算が文を実行することであり、その順番は定まっています。このような違いがあり、命令型言語よりは人気がないものの、ラムダ計算の表現力を示しているものでしょう。

次に、型無しラムダ計算は SKI コンビネータ計算と直接的に関連しています。ラムダ計算の全ての式は SKI コンビネータ計算において対応する項を持ちます。クサイ関数において使われていることで知られている SKI コンビネータ計算ですが、その本質は型無しラムダ計算を単純化したものです。
