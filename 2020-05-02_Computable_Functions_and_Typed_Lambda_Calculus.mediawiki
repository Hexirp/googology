今日は、計算可能関数と型付きラムダ計算の関係について語りましょうか。

<nowiki>
\[
  \newcommand{\then}{\rightarrow}
\]
</nowiki>

== 型付きラムダ計算 ==

計算可能関数については巨大数論に触れている読者なら既にご存知だと思います。ですが、型付きラムダ計算の知識までは求めません。ここで触りだけを解説しておきます。

型付きラムダ計算 (typed lambda calculus) とは、型が付いたラムダ計算 (lambda calculus) のことです。

ラムダ計算 (lambda calculus) とは、普通では型無しラムダ計算 (untyped lambda calculus) のことを指しますが、ラムダ計算に類似するものを全て指す言葉として使われることがあるかもないかもしれません。ラムダ計算は「引数を取る」「一つの値をもう一つの値に適用する」という二つの操作だけで成り立つ計算模型（計算モデル）です。すなわち、チューリング完全です。余りにも原始的かつ基本的すぎて何が出来るかでは説明しづらいので、何と関連するかで説明してみます。

まず、見逃せないのは関数型言語との関連です。関数型言語の基礎にはラムダ計算があり、チューリングマシンやレジスタマシンやスタックマシンが基礎にある命令型言語とは対照的です。関数型言語の計算とは式を評価することであり、評価の順番は様々なものはあります。命令型言語の計算が文を実行することであり、その順番は定まっています。関数型言語はラムダ計算の表現力を示している良い一例でしょう。

次に、型無しラムダ計算は SKI コンビネータ計算と直接的に関連しています。ラムダ計算の全ての式は SKI コンビネータ計算において対応する項を持ちます。クサイ関数において使われていることで知られている SKI コンビネータ計算ですが、その本質は型無しラムダ計算を単純化したものです。

型無しラムダ計算は簡約が停止しない式を作れます。そのような一例は <code>(λx. x x) (λx. x x)</code> という式です。

== カリー＝ハワード対応 ==

では、型付きラムダ計算では評価が停止しない項を作ることが出来るでしょうか。実は体系にもよりますが、作ることが出来ないと考えられています。その理由はカリー＝ハワード対応によります。

カリー＝ハワード対応は論理と計算を結び付ける対応関係です。たとえば \( A \then A \) という恒真式である論理式があったとしましょう。これをカリー＝ハワード対応を通して移すと \( [A] \then [A] \) となります。ただし、型 \( [A] \) は命題 \( A \) に対応するものだと考えてください。また、この型は \( \lambda x \ldotp x \) という値を持ちます。これは移す前の論理式に証明が存在するという事実に対応します。

すなわち、ある型付きラムダ計算の体系は、ある論理の体系と対応します。なので、明確に矛盾している体系でもない限り、評価が停止しない項を作ることは出来ないと信じられています。もちろん、ペアノ算術が矛盾している可能性があるように確実なことは言えませんが。

型付きラムダ計算には様々な種類があり、例を挙げると、単純型付きラムダ計算 (simply typed lambda calculus, λ, λ<sup>→</sup>, \( \lambda \), \( \lambda ^ \rightarrow \)) 、システム・エフ<ref>訳語を確認できなかったので音読を記載した</ref>・二階ラムダ計算・（ジラール＝レイノルズ）多相ラムダ計算 (System F, second-order lambda calculus, (Girard–Reynolds) polymorphic lambda calculus, λ2, \( \lambda 2 \)) 、システム・ティー<ref>訳語を確認できなかったので音読を記載した</ref> (System T) 、システム・ユー<ref>訳語を確認できなかったので音読を記載した</ref> (System U) 、構成計算<ref>訳語を確認できなかったので独自に訳語を作成した。中国語で「构造演算」と訳されていることを参考にして construction が「建設」「構築」「構造」と訳されることから「建設計算」「構築計算」「構造計算」などを考案したが建設業界の用語と被ってるため没にした。その後 construction から連想した constructor が「構成子」と訳されることから「構成計算」を考案した</ref> (calculus of construction, λC, CoC, \( \lambda \mathrm{C} \), \( \mathrm{CoC} \)) 、帰納構成計算 (calculus of inductive construction, CIC, \( CIC \)) 、可述的帰納構成計算 (predicative calculus of inductive construction, pCIC, \( \mathrm{pCIC} \)) 、純粋型体系 (pure type system, PTS, \( \mathrm{PTS} \)) 、などが挙げられます。

明確に矛盾している体系として System U があります。この体系が矛盾することはジラールのパラドックス (Girard's paradox) と呼ばれます。具体的な証明を知りたい方は A Simplification of Girard's Paradox という論文の第 3 章を読むのがお勧めです。

型付きラムダ計算はカリー＝ハワード対応により論理と見なすことができます。そのような論理の中には強力なものがあります。私が知る最も強力な例は \( \mathrm{pCIC} \) が \( \mathrm{ZFC} + \textrm{“There are countably many inaccessible cardinals”} \) と無矛盾性が等しいというものです。直観主義的かつ構成的である体系<ref>ここでの「直観主義的」と「構成的」という表現は私の主観です</ref>としてはとても強いように見えます。
