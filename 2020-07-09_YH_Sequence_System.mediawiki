'''YH数列システム''' (YH sequence system, YHSS) は、私 (Hexirp) が作成した階差数列システムの一種である<ref name="assertion">筆者による主張。</ref>。より詳しく言えば、Y的数列システムの一種である<ref name="assertion" />。

<div style="display: none;"><nowiki>\[
  \newcommand{\ordinarycolon}{:}
  \newcommand{\vcentcolon}{\mathrel{\mathop\ordinarycolon}}
  \newcommand{\coloneqq}{\vcentcolon\mathrel{\mkern-1.2mu}=}
\]</nowiki></div>

== 説明 ==

YH数列システムは、順序数表記と類似した表記として定義されている<ref name="assertion" />。すなわち、 \( \mathbb{N} _ { + } \) を \( \{ x \in \mathbb{N} \mid x > 0 \} \) として \( { \mathbb{N} _ { + } } ^ { \_ < \omega } \) を \( \mathrm{T} _ \mathrm{YH} \) とする<ref name="assertion" />。 \( \mathrm{T} _ \mathrm{YH} \) の部分集合を \( \mathrm{OT} _ \mathrm{YH} \) とし、関数 \( \mathrm{cof} _ \mathrm{YH} : \mathrm{OT} _ \mathrm{YH} \rightarrow \{ 0, 1, \omega \} \) を定義する<ref name="assertion" />。順序 \( \_ < _ \mathrm{YH} \_ \) は辞書式順序により定義される<ref name="assertion" />。展開の関数が基本列としても働き、それは項 \( S \in \mathrm{OT} _ \mathrm{YH} \) と数 \( n \in \mathrm{cof} _ \mathrm{YH} ( S ) \) に対して項 \( S [ n ] _ \mathrm{YH} \in \mathrm{OT} _ \mathrm{YH} \) となる<ref name="assertion" />。

=== 山 ===

YH数列システムにおいて、全てのバージョンにおいて現れる最も重要な概念が山である<ref name="assertion" />。単純に言うと、山とは以下のように定義される三つの関数 \( \mathrm{d}, \mathrm{p}, \mathrm{a} \) のグラフ<ref group="注">[https://ja.wikipedia.org/wiki/%E3%82%B0%E3%83%A9%E3%83%95_(%E9%96%A2%E6%95%B0) グラフ]を参照。</ref>である<ref name="assertion" />。

<p style="overflow: auto;"><nowiki>\begin{eqnarray*}
  \mathrm{d} _ S ( x, n ) & \coloneqq &
    \begin{cases}
      S _ x                                                                               & ( n = 1                                                                                                       ) \\
      0                                                                                   & ( n > 1 \land \mathrm{p} _ S ( x, n ^ - ) = 0                                                                 ) \\
      0                                                                                   & ( n > 1 \land \mathrm{p} _ S ( x, n ^ - ) = 0 \land \mathrm{d} _ S ( \mathrm{p} _ S ( x, n ^ - ), n ^ - ) = 0 ) \\
      \mathrm{d} _ S ( x, n ^ - ) - \mathrm{d} _ S ( \mathrm{p} _ S ( x, n ^ - ), n ^ - ) & ( n > 1 \land \mathrm{p} _ S ( x, n ^ - ) > 0 \land \mathrm{d} _ S ( \mathrm{p} _ S ( x, n ^ - ), n ^ - ) > 0 ) \\
    \end{cases} \\
  \mathrm{p} _ S ( x, n ) & \coloneqq & \max ( \{ 0 \} \cup \{ p \in \mathbb{N} ^ + \mid p < x \land \mathrm{d} _ S ( p, n ) < \mathrm{d} _ S ( x, n ) \land \mathrm{isAnc} _ S ( x, n, \mathrm{p} ) \} ) \\
  \mathrm{isAnc} _ S ( x, n, p ) & \coloneqq &
    \begin{cases}
      \mathrm{True}                     & ( n = 1 ) \\
      p \in \mathrm{a} _ S ( x, n - 1 ) & ( n > 1 ) \\
    \end{cases} \\
  \mathrm{a} _ S ( x, n ) & \coloneqq &
    \begin{cases}
      \{ x \}                                                    & ( \mathrm{p} _ S ( x, n ) = 0 ) \\
      \{ x \} \cup \mathrm{a} _ S ( \mathrm{p} _ S ( x, n ), n ) & ( \mathrm{p} _ S ( x, n ) > 0 ) \\
    \end{cases} \\
\end{eqnarray*}</nowiki></p>

厳密に定義するならば、 \( S \) に対する山は、三つの関数 \( \mathrm{d} _ S, \mathrm{p} _ S, \mathrm{a} _ S \) のグラフであり、その定義域は \( x \) においては \( 1 \) 以上 \( S \) の長さ以下の自然数であり \( n \) においては \( 1 \) 以上の自然数である<ref name="assertion" />。もちろん、そのままでは効率が悪いためプログラムの中では配列などで表され、高速に値へとアクセスできるようになっている<ref name="assertion" />。 [[whY mountain]] において対応する概念は Mt. Fuji と呼ばれる（[https://twitter.com/koteitan/status/1280460403919601665 用例]）<ref name="survey" />。山という名称は whY mountain において別の意味で使われているが、こちらの方が九ヶ月ほど早い<ref name="survey" />。

三つの関数の名前や内容はバージョンによって異なることもあるが、全てのバージョンにおいてこれらの関数は現れる<ref name="assertion" />。例示した関数は 3 番目の定義であり、それ以前の定義は問題があるため破棄された<ref name="assertion" />。

==== 山の 1 番目の定義 ====

バージョン 0.0, 1.0, 1.1, 1.1.1 における定義である<ref name="assertion" />。この定義には \( \mathrm{d} _ { ( 1, 2 ) } ( 2, 3 ) \) が \( 0 \) にならないという問題がある<ref name="2019-10-30">[[ユーザー:Hexirp]]、[[ユーザーブログ:Hexirp/(2019-10-30)_Y数列_Hexirp_版のバグが発見]]。</ref>。

<p style="overflow: auto;"><nowiki>\begin{eqnarray*}
  \mathrm{d} _ S ( x, n ) & \coloneqq &
    \begin{cases}
      S _ x                                                                               & ( n = 1                                       ) \\
      0                                                                                   & ( n > 1 \land \mathrm{p} _ S ( x, n ^ - ) = 0 ) \\
      \mathrm{d} _ S ( x, n ^ - ) - \mathrm{d} _ S ( \mathrm{p} _ S ( x, n ^ - ), n ^ - ) & ( n > 1 \land \mathrm{p} _ S ( x, n ^ - ) > 0 ) \\
    \end{cases} \\
  \mathrm{p} _ S ( x, n ) & \coloneqq & \max ( \{ 0 \} \cup \{ p \in \mathbb{N} ^ + \mid p < x \land \mathrm{d} _ S ( p, n ) < \mathrm{d} _ S ( x, n ) \land \mathrm{isAnc} _ S ( x, n, \mathrm{p} ) \} ) \\
  \mathrm{isAnc} _ S ( x, n, p ) & \coloneqq &
    \begin{cases}
      \mathrm{True}                     & ( n = 1 ) \\
      p \in \mathrm{a} _ S ( x, n - 1 ) & ( n > 1 ) \\
    \end{cases} \\
  \mathrm{a} _ S ( x, n ) & \coloneqq &
    \begin{cases}
      \emptyset                                                  & ( x = 0 ) \\
      \{ x \} \cup \mathrm{a} _ S ( \mathrm{p} _ S ( x, n ), n ) & ( x > 0 ) \\
    \end{cases} \\
\end{eqnarray*}</nowiki></p>

==== 山の 2 番目の定義 ====

バージョン 2.0, 2.1 における定義である<ref name="assertion" />。この定義には再帰のために \( \mathrm{a} _ S ( x, n ) \) の \( x \) が \( 0 \) となってしまうという問題があった<ref name="assertion" />。これは些細な問題であるが、メモ化の際に障害となった<ref name="assertion" />。

<p style="overflow: auto;"><nowiki>\begin{eqnarray*}
  \mathrm{d} _ S ( x, n ) & \coloneqq &
    \begin{cases}
      S _ x                                                                               & ( n = 1                                                                                                       ) \\
      0                                                                                   & ( n > 1 \land \mathrm{p} _ S ( x, n ^ - ) = 0                                                                 ) \\
      0                                                                                   & ( n > 1 \land \mathrm{p} _ S ( x, n ^ - ) = 0 \land \mathrm{d} _ S ( \mathrm{p} _ S ( x, n ^ - ), n ^ - ) = 0 ) \\
      \mathrm{d} _ S ( x, n ^ - ) - \mathrm{d} _ S ( \mathrm{p} _ S ( x, n ^ - ), n ^ - ) & ( n > 1 \land \mathrm{p} _ S ( x, n ^ - ) > 0 \land \mathrm{d} _ S ( \mathrm{p} _ S ( x, n ^ - ), n ^ - ) > 0 ) \\
    \end{cases} \\
  \mathrm{p} _ S ( x, n ) & \coloneqq & \max ( \{ 0 \} \cup \{ p \in \mathbb{N} ^ + \mid p < x \land \mathrm{d} _ S ( p, n ) < \mathrm{d} _ S ( x, n ) \land \mathrm{isAnc} _ S ( x, n, \mathrm{p} ) \} ) \\
  \mathrm{isAnc} _ S ( x, n, p ) & \coloneqq &
    \begin{cases}
      \mathrm{True}                     & ( n = 1 ) \\
      p \in \mathrm{a} _ S ( x, n - 1 ) & ( n > 1 ) \\
    \end{cases} \\
  \mathrm{a} _ S ( x, n ) & \coloneqq &
    \begin{cases}
      \emptyset                                                  & ( x = 0 ) \\
      \{ x \} \cup \mathrm{a} _ S ( \mathrm{p} _ S ( x, n ), n ) & ( x > 0 ) \\
    \end{cases} \\
\end{eqnarray*}</nowiki></p>

=== Y数列 Hexirp 版 ===

2018年6月15日、Y数列がゆきと氏により考案されて以降、Y数列についての研究が進められてきた<ref name="assertion" />。ゆきと氏による定義は未だ存在しないが、展開の例は豊富に存在する<ref name="assertion" />。

そのため、Y数列の定義を目指して、今日に至るまで様々な試みが行われている<ref name="assertion" /><ref name="2019-10-14">[[ユーザー:Hexirp]]、[[ユーザーブログ:Hexirp/Y数列_Hexirp_版]]。</ref>。これらの試みはゆきと氏の意思もあって本家のY数列とは区別できるように名前が付けられていたものの、本家のY数列の展開の例と合致することを目指しているという点でY数列の定義を成す試みだと言えた<ref name="assertion" /><ref name="2019-10-14" />。

その中で私もY数列 Hexirp 版という表記群を作成していた（[[ユーザーブログ:Hexirp/Y数列_Hexirp_版|リンク]]）<ref name="assertion" />。この表記の特徴は「Y数列の定義を作る」と「美しい定義を作る」という二つの目標を両立できるように複数のバージョンを作成していたことにある<ref name="assertion" />。

2020年6月末、Y数列の展開が変更された<ref name="2020-07-08">[[ユーザー:Hexirp]]、[[ユーザーブログ:Hexirp/(2020-07-08)_Y数列]]。</ref>。これにより p進大好きbot 氏がY数列への追随を断念することをツイートする（[https://twitter.com/non_archimedean/status/1278629588134883328 リンク]）などの影響があった<ref name="survey">筆者による調査。</ref>。これに対してY数列 Hexirp 版はバージョン 2.0 と一致していたため無問題であった<ref name="assertion" />。

ここ最近、Y数列の研究が活発になり、本家の展開の変更に繋がっている<ref name="assertion" />。また、この件に関連してY数列 Hexirp 版が話題になることも増えた<ref name="assertion" />。これらの状況により、私はY数列 Hexirp 版 3.0 を作成しようと考えた<ref name="assertion" />。Y数列 Hexirp 版 3.0 は、今まで未完成であった \( (1,3) \) 以上への展開を記述することを目標としていた<ref name="assertion" />。

== 名称 ==

「YH数列システム」は、名称を変更する前は「Y数列 Hexirp 版」としていた<ref name="assertion" />。しかし、様々な思惑もあり2020年7月5日に名称を変更することを決めた<ref name="assertion" />。この名称は以前の名称を捻ったものである<ref name="assertion" />。

バージョンは引き継ぐため、今までのY数列 Hexirp 版 ''[version]'' は、YH数列システム ''[version]'' というように変更される<ref name="assertion" />。

== 歴史 ==

……。

== バージョン ==

YH数列システムのバージョンは複数ある。

{| class="wikitable"
! バージョン名
! 発表日
! 上限<ref group="注">定義の対象となる数列の上限は何か。</ref>
! 定義は？<ref group="注">展開が定義できているかどうか。</ref>
! 挙動は？<ref group="注">順序数表記として正しいかどうか。</ref>
! 補足
|-
| 0.0<ref name="2019-10-14" />
| 2019-09-04<ref name="2019-10-14" />
| \( ( 1, \omega ) \)<ref name="2019-10-14" />
| false<ref name="2019-10-14" /><ref name="2019-10-30" />
| false<ref name="obvious">自明。</ref>
| ……。
|-
| 1.0<ref name="2019-10-14" />
| 2019-10-14<ref name="2019-10-14" />
| \( ( 1, 3 ) \)<ref name="2019-10-14" />
| false<ref name="2019-10-14" /><ref name="2019-10-30" />
| false<ref name="obvious" />
| ……。
|-
| 1.1<ref name="2019-10-14" />
| 2019-10-15<ref name="2019-10-14" />
| \( ( 1, 3 ) \)<ref name="2019-10-14" />
| false<ref name="2019-10-14" /><ref name="2019-10-30" />
| false<ref name="obvious" />
| ……。
|-
| 1.1.1<ref name="2019-10-14" />
| 2019-10-31<ref name="2019-10-14" />
| \( ( 1, 3 ) \)<ref name="2019-10-14" />
| false<ref name="2019-10-14" /><ref name="2019-10-30" />
| false<ref name="obvious" />
| ……。
|-
| 2.0<ref name="2019-10-14" />
| 2019-12-02<ref name="2019-10-14" />
| \( ( 1, 3 ) \)<ref name="2019-10-14" />
| true<ref name="assertion" />
| unknown<ref name="assertion" />
| ……。
|-
| 2.1<ref name="2019-10-14" />
| 2019-12-02<ref name="2019-10-14" />
| \( ( 1, 3 ) \)<ref name="2019-10-14" />
| true<ref name="assertion" />
| false<ref name="2020-07-03">[[ユーザー:Hexirp]]、[[ユーザーブログ:Hexirp/(2020-07-03)_Y数列_Hexirp_版_2.1_の無限ループ]]。</ref>
| ……。
|}

== 注釈 ==

<references group="注" />

== 出典 ==

<references />
