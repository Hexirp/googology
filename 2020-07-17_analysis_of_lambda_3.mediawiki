[https://googology.wikia.org/ja/wiki/%E3%83%A6%E3%83%BC%E3%82%B6%E3%83%BC%E3%83%96%E3%83%AD%E3%82%B0:Merliborn/%EF%BC%BBsikigamig%EF%BC%BDLambda-zip?oldid=23748 ユーザーブログ:Merliborn/［sikigamig］Lambda-zip] を解析する。

== 型付け ==

型を利用してラムダ式の停止性を検証する。これはプログラムが正しく実装できているのであればプログラムの停止性へと直接的に繋がる。ここでは System F で解釈を行う。一番目に元々の式を書き、二番目に型についての情報を加えた式を書き、三番目に型を書く。

自然数を表現する項は \( \forall A \ldotp ( A \rightarrow A ) \rightarrow A \rightarrow A \) という型を持っているものとする。これは Böhm–Berarducci encoding と呼ばれる物である（[https://math.stackexchange.com/questions/2522624/are-all-simply-typed-lambda-terms-of-type-a-to-a-to-a-to-a-church-numerals リンク１]、[http://oleg.fi/gists/posts/2019-06-26-linear-church-encodings.html リンク２]、[http://okmij.org/ftp/tagless-final/course/Boehm-Berarducci.html リンク３]）。なお、細かいことだが \( \forall A \ldotp A \rightarrow ( A \rightarrow A ) \rightarrow A \) の方が <code>data Nat = Z | S Nat</code> というような定義と順序が同じになって好きである。

----

<nowiki>\begin{eqnarray*}
  \mathbf{B}  & \equiv & \lambda x y z \ldotp x ( y z ) \\
  \mathbf{B}' & \equiv & \Lambda A B C \ldotp \lambda x ^ { B \rightarrow C } y ^ { A \rightarrow B } z ^ A \ldotp x ( y z ) \\
              & :      & \forall A B C \ldotp ( B \rightarrow C ) \rightarrow ( A \rightarrow B ) \rightarrow A \rightarrow C \\
\end{eqnarray*}</nowiki>

関数の合成である。 Haskell では <code>(.)</code> 演算子に該当する。

----

<nowiki>\begin{eqnarray*}
  \mathtt{h} _ 0      & \equiv & \lambda m n \ldotp n m \\
  { \mathtt{h} _ 0 }' & \equiv & \Lambda A B \ldotp \lambda m ^ A n ^ { A \rightarrow B } \ldotp n m \\
                      & :      & \forall A B \ldotp A \rightarrow ( A \rightarrow B ) \rightarrow B \\
\end{eqnarray*}</nowiki>

関数の適用である。 Haskell では <code>(&)</code> 演算子に該当する。

<nowiki>\begin{eqnarray*}
  { \mathtt{h} _ 0 }' & \equiv & \lambda m ^ { \forall A \ldotp ( A \rightarrow A ) \rightarrow A \rightarrow A } n ^ { \forall A \ldotp ( A \rightarrow A ) \rightarrow A \rightarrow A } \ldotp \Lambda A \ldotp n ( A \rightarrow A ) ( m A ) \\
                      & :      & ( \forall A \ldotp ( A \rightarrow A ) \rightarrow A \rightarrow A ) \rightarrow ( \forall A \ldotp ( A \rightarrow A ) \rightarrow A \rightarrow A ) \rightarrow \forall A \ldotp ( A \rightarrow A ) \rightarrow A \rightarrow A \\
\end{eqnarray*}</nowiki>

ただし、自然数を引数に取るならば、このように型付けされるだろう。

----

次は \( \mathrm{H} _ 3 \) を型付けしたいところだが、これは複雑すぎるため後回しにしておく。これは内側の型と外側の型から攻めていきたい。なので \( \lambda _ 3 \) の型を考える。

<nowiki>\begin{eqnarray*}
  \lambda _ 0      & \equiv & \Lambda _ 3 \underline{\mathtt{3}} \underline{\mathtt{3}} \\
  { \lambda _ 0 }' & \equiv & { \Lambda _ 3 }' { \underline{\mathtt{3}} }' { \underline{\mathtt{3}} }' \\
                   & :      & \forall A \ldotp ( A \rightarrow A ) \rightarrow A \rightarrow A \\
\end{eqnarray*}</nowiki>

これの型は当然自然数となる。というより、そうならなかったら巨大数ではない。

----

次は \( \underline{\mathtt{3}} \) の型付けを行う。

<nowiki>\begin{eqnarray*}
  \underline{\mathtt{3}}      & \equiv & \lambda f x \ldotp f ( f ( f x ) ) \\
  { \underline{\mathtt{3}} }' & \equiv & \Lambda A \ldotp \lambda f ^ { A \rightarrow A } x ^ A \ldotp f ( f ( f x ) ) \\
                              & :      & \forall A \ldotp ( A \rightarrow A ) \rightarrow A \rightarrow A \\
\end{eqnarray*}</nowiki>

これも名前と値から考えて自然数である。

----

上記の二つの式の型から \( \Lambda _ 3 \) の型を計算することが可能になる。

<nowiki>\begin{eqnarray*}
  \Lambda _ 3      & \equiv & \lambda m n \ldotp n \mathrm{H} _ 3 \mathtt{h} _ 0 m m \\
  { \Lambda _ 3 }' & \equiv & \textrm{???} \\
                   & :      & ( \forall A \ldotp ( A \rightarrow A ) \rightarrow A \rightarrow A ) \rightarrow ( \forall A \ldotp ( A \rightarrow A ) \rightarrow A \rightarrow A ) \rightarrow \forall A \ldotp ( A \rightarrow A ) \rightarrow A \rightarrow A \\
\end{eqnarray*}</nowiki>

ここでようやく全体像が見えてくる。つまり、 \( \mathtt{h} _ 0 \) 、すなわち冪乗を何らかの形式で繰り返したものが \( \Lambda _ 3 \) であり、冪乗の繰り返しを行うのが \( \mathrm{H} _ 3 \) だと予想される。

\[ \lambda m ^ { \forall A \ldotp ( A \rightarrow A ) \rightarrow A \rightarrow A } n ^ { \forall A \ldotp ( A \rightarrow A ) \rightarrow A \rightarrow A } \ldotp [ n \mathrm{H} _ 3 \mathtt{h} _ 0 m m ] : \forall A \ldotp ( A \rightarrow A ) \rightarrow A \rightarrow A \]

ここで \( [ \_ ] \) はまだ型付けがされていない式を表す穴である。ここでは自然数であるべき箇所が示されている。

\[ \lambda m ^ { \forall A \ldotp ( A \rightarrow A ) \rightarrow A \rightarrow A } n ^ { \forall A \ldotp ( A \rightarrow A ) \rightarrow A \rightarrow A } \ldotp \Lambda A \ldotp [ n \mathrm{H} _ 3 \mathtt{h} _ 0 m m ] : ( A \rightarrow A ) \rightarrow A \rightarrow A \]

\( A \) を外側に括りだしてみる。この先の推論が上手く行かないため、これは失敗である。

\[ \lambda m ^ \mathbb{N} n ^ \mathbb{N} \ldotp [ n \mathrm{H} _ 3 \mathtt{h} _ 0 m m ] : \mathbb{N} \]

\( \mathbb{N} \equiv \forall A \ldotp ( A \rightarrow A ) \rightarrow A \rightarrow A \) を導入する。

\[ \lambda m ^ \mathbb{N} n ^ \mathbb{N} \ldotp n ( \mathbb{N} \rightarrow \mathbb{N} \rightarrow \mathbb{N} ) { \mathrm{H} _ 3 }' { \mathtt{h} _ 0 }' m m \]

\( n \) が何を繰り返すのか考えるとこうなる。まず、 \( { \mathtt{h} _ 0 }' m m : \mathbb{N} \), \( { \mathrm{H} _ 3 }' { \mathtt{h} _ 0 }' m m : \mathbb{N} \), \( { \mathrm{H} _ 3 }' ( { \mathrm{H} _ 3 }' { \mathtt{h} _ 0 }' ) m m : \mathbb{N} \), ... であることを押さえておく。すると、 \( \mathrm{H} _ 3 \) は自然数に関する二項演算子を受け取って自然数に関する二項演算子を返す関数となる。これは \( n \) で繰り返し可能な操作である。

<nowiki>\begin{eqnarray*}
  \Lambda _ 3      & \equiv & \lambda m n \ldotp n \mathrm{H} _ 3 \mathtt{h} _ 0 m m \\
  { \Lambda _ 3 }' & \equiv & \lambda m ^ \mathbb{N} n ^ \mathbb{N} \ldotp n ( \mathbb{N} \rightarrow \mathbb{N} \rightarrow \mathbb{N} ) { \mathrm{H} _ 3 }' { \mathtt{h} _ 0 }' m m \\
                   & :      & \mathbb{N} \rightarrow \mathbb{N} \rightarrow \mathbb{N} \\
\end{eqnarray*}</nowiki>

最終的にこうなる。

----

この結果から \( { \mathrm{H} _ 3 }' : ( \mathbb{N} \rightarrow \mathbb{N} \rightarrow \mathbb{N} ) \rightarrow \mathbb{N} \rightarrow \mathbb{N} \rightarrow \mathbb{N} \) であると分かる。

<nowiki>\begin{eqnarray*}
  \mathrm{H} _ 3      & \equiv & \lambda H m n \ldotp H n n ( \lambda T L k \ldotp L k \mathtt{h} _ 0 k k T \mathbf{B} ) ( \lambda L k \ldotp k ( \lambda F x y \ldotp L y F x x ) ) \mathtt{h} _ 0 m m \\
  { \mathrm{H} _ 3 }' & \equiv & \textrm{???} \\
                   & :      & ( \mathbb{N} \rightarrow \mathbb{N} \rightarrow \mathbb{N} ) \rightarrow \mathbb{N} \rightarrow \mathbb{N} \rightarrow \mathbb{N} \\
\end{eqnarray*}</nowiki>

つまり、こうである。

<nowiki>\begin{eqnarray*}
  \mathrm{H} _ 3      & \equiv & \lambda H m n \ldotp H n n ( \lambda T L k \ldotp L k \mathtt{h} _ 0 k k T \mathbf{B} ) ( \lambda L k \ldotp k ( \lambda F x y \ldotp L y F x x ) ) \mathtt{h} _ 0 m m \\
  { \mathrm{H} _ 3 }' & \equiv & \lambda H ^ { \mathbb{N} \rightarrow \mathbb{N} \rightarrow \mathbb{N} } m ^ \mathbb{N} n ^ \mathbb{N} \ldotp \textrm{???} \\
                   & :      & ( \mathbb{N} \rightarrow \mathbb{N} \rightarrow \mathbb{N} ) \rightarrow \mathbb{N} \rightarrow \mathbb{N} \rightarrow \mathbb{N} \\
\end{eqnarray*}</nowiki>

さらに、簡単に分かる範囲の式を埋めていく。

<nowiki>\begin{eqnarray*}
  \mathrm{H} _ 3      & \equiv & \lambda H m n \ldotp H n n ( \lambda T L k \ldotp L k \mathtt{h} _ 0 k k T \mathbf{B} ) ( \lambda L k \ldotp k ( \lambda F x y \ldotp L y F x x ) ) \mathtt{h} _ 0 m m \\
  { \mathrm{H} _ 3 }' & \equiv & \lambda H ^ { \mathbb{N} \rightarrow \mathbb{N} \rightarrow \mathbb{N} } m ^ \mathbb{N} n ^ \mathbb{N} \ldotp ( H n n \mathsf{T} ( [ \lambda T L k \ldotp L k \mathtt{h} _ 0 k k T \mathbf{B} ] : \mathsf{T} \rightarrow \mathsf{T} ) ( [ \lambda L k \ldotp k ( \lambda F x y \ldotp L y F x x ) ] : \mathsf{T} ) : \mathsf{T} ) { \mathtt{h} _ 0 }' m m \\
                   & :      & ( \mathbb{N} \rightarrow \mathbb{N} \rightarrow \mathbb{N} ) \rightarrow \mathbb{N} \rightarrow \mathbb{N} \rightarrow \mathbb{N} \\
\end{eqnarray*}</nowiki>

さらに、未知の型 \( \mathsf{T} \) を使って埋めてやる。ここで、未知の型 \( \mathsf{T} \) は \( ( \mathbb{N} \rightarrow \mathbb{N} \rightarrow \mathbb{N} ) \rightarrow \mathbb{N} \rightarrow \mathbb{N} \rightarrow \mathbb{N} \) のことだと分かる。そのため、 \( \mathsf{T} \equiv ( \mathbb{N} \rightarrow \mathbb{N} \rightarrow \mathbb{N} ) \rightarrow \mathbb{N} \rightarrow \mathbb{N} \rightarrow \mathbb{N} \) とする。

\( [ \lambda T L k \ldotp L k \mathtt{h} _ 0 k k T \mathbf{B} ] : \mathsf{T} \rightarrow \mathsf{T} \) にフォーカスしよう。

\[ \lambda T ^ \mathsf{T} L ^ { \mathbb{N} \rightarrow \mathbb{N} \rightarrow \mathbb{N} } k ^ \mathbb{N} \ldotp [ L k \mathtt{h} _ 0 k k T \mathbf{B} ] : \mathbb{N} \rightarrow \mathbb{N} \]

このようになる。

== 関連項目 ==

{{User:Hexirp/式神巨大数}}
